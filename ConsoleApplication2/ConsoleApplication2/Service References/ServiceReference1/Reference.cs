//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApplication2.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost/itpproject/service.wsdl", ConfigurationName="ServiceReference1.wsPortType")]
    public interface wsPortType {
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:itpWebservice) of message checkUserLoginRequest does not match the default value (http://localhost/itpproject/service.wsdl)
        [System.ServiceModel.OperationContractAttribute(Action="urn:itpWebservice#checkUserLogin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ConsoleApplication2.ServiceReference1.checkUserLoginResponse checkUserLogin(ConsoleApplication2.ServiceReference1.checkUserLoginRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:itpWebservice#checkUserLogin", ReplyAction="*")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.checkUserLoginResponse> checkUserLoginAsync(ConsoleApplication2.ServiceReference1.checkUserLoginRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (urn:itpWebservice) of message insertMongoRequest does not match the default value (http://localhost/itpproject/service.wsdl)
        [System.ServiceModel.OperationContractAttribute(Action="urn:itpWebservice#insertMongo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        ConsoleApplication2.ServiceReference1.insertMongoResponse insertMongo(ConsoleApplication2.ServiceReference1.insertMongoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:itpWebservice#insertMongo", ReplyAction="*")]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.insertMongoResponse> insertMongoAsync(ConsoleApplication2.ServiceReference1.insertMongoRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkUserLogin", WrapperNamespace="urn:itpWebservice", IsWrapped=true)]
    public partial class checkUserLoginRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string password;
        
        public checkUserLoginRequest() {
        }
        
        public checkUserLoginRequest(string username, string password) {
            this.username = username;
            this.password = password;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="checkUserLoginResponse", WrapperNamespace="urn:itpWebservice", IsWrapped=true)]
    public partial class checkUserLoginResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int Result;
        
        public checkUserLoginResponse() {
        }
        
        public checkUserLoginResponse(int Result) {
            this.Result = Result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="insertMongo", WrapperNamespace="urn:itpWebservice", IsWrapped=true)]
    public partial class insertMongoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public string jsonData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=1)]
        public string gameName;
        
        public insertMongoRequest() {
        }
        
        public insertMongoRequest(string jsonData, string gameName) {
            this.jsonData = jsonData;
            this.gameName = gameName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="insertMongoResponse", WrapperNamespace="urn:itpWebservice", IsWrapped=true)]
    public partial class insertMongoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="", Order=0)]
        public int Result;
        
        public insertMongoResponse() {
        }
        
        public insertMongoResponse(int Result) {
            this.Result = Result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface wsPortTypeChannel : ConsoleApplication2.ServiceReference1.wsPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class wsPortTypeClient : System.ServiceModel.ClientBase<ConsoleApplication2.ServiceReference1.wsPortType>, ConsoleApplication2.ServiceReference1.wsPortType {
        
        public wsPortTypeClient() {
        }
        
        public wsPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public wsPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public wsPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConsoleApplication2.ServiceReference1.checkUserLoginResponse ConsoleApplication2.ServiceReference1.wsPortType.checkUserLogin(ConsoleApplication2.ServiceReference1.checkUserLoginRequest request) {
            return base.Channel.checkUserLogin(request);
        }
        
        public int checkUserLogin(string username, string password) {
            ConsoleApplication2.ServiceReference1.checkUserLoginRequest inValue = new ConsoleApplication2.ServiceReference1.checkUserLoginRequest();
            inValue.username = username;
            inValue.password = password;
            ConsoleApplication2.ServiceReference1.checkUserLoginResponse retVal = ((ConsoleApplication2.ServiceReference1.wsPortType)(this)).checkUserLogin(inValue);
            return retVal.Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.checkUserLoginResponse> ConsoleApplication2.ServiceReference1.wsPortType.checkUserLoginAsync(ConsoleApplication2.ServiceReference1.checkUserLoginRequest request) {
            return base.Channel.checkUserLoginAsync(request);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.checkUserLoginResponse> checkUserLoginAsync(string username, string password) {
            ConsoleApplication2.ServiceReference1.checkUserLoginRequest inValue = new ConsoleApplication2.ServiceReference1.checkUserLoginRequest();
            inValue.username = username;
            inValue.password = password;
            return ((ConsoleApplication2.ServiceReference1.wsPortType)(this)).checkUserLoginAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ConsoleApplication2.ServiceReference1.insertMongoResponse ConsoleApplication2.ServiceReference1.wsPortType.insertMongo(ConsoleApplication2.ServiceReference1.insertMongoRequest request) {
            return base.Channel.insertMongo(request);
        }
        
        public int insertMongo(string jsonData, string gameName) {
            ConsoleApplication2.ServiceReference1.insertMongoRequest inValue = new ConsoleApplication2.ServiceReference1.insertMongoRequest();
            inValue.jsonData = jsonData;
            inValue.gameName = gameName;
            ConsoleApplication2.ServiceReference1.insertMongoResponse retVal = ((ConsoleApplication2.ServiceReference1.wsPortType)(this)).insertMongo(inValue);
            return retVal.Result;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.insertMongoResponse> ConsoleApplication2.ServiceReference1.wsPortType.insertMongoAsync(ConsoleApplication2.ServiceReference1.insertMongoRequest request) {
            return base.Channel.insertMongoAsync(request);
        }
        
        public System.Threading.Tasks.Task<ConsoleApplication2.ServiceReference1.insertMongoResponse> insertMongoAsync(string jsonData, string gameName) {
            ConsoleApplication2.ServiceReference1.insertMongoRequest inValue = new ConsoleApplication2.ServiceReference1.insertMongoRequest();
            inValue.jsonData = jsonData;
            inValue.gameName = gameName;
            return ((ConsoleApplication2.ServiceReference1.wsPortType)(this)).insertMongoAsync(inValue);
        }
    }
}
